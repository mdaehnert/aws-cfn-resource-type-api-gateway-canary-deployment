{
    "typeName": "SPRT::ApiGateway::Deployment",
    "description": "Deploys a REST API to ablue and a green stage with canary settings and deployment hooks for tests against the green stage.",
    "sourceUrl": "https://github.com/mdaehnert/aws-cfn-resource-type-api-gateway-canary-deployment",
    "properties": {
        "DeploymentId": {
            "description": "The ID of an API Gateway deployment that should be released to a blue and a green stage.",
            "type": "string"
        },
        "RestApiId": {
            "description": "Identifies the API Gateway REST API that should be deployed to a blue and a green stage.",
            "type": "string"
        },
        "TracingEnabled": {
            "description": "Enables X-Ray tracing for both API Gateway stages.",
            "type": "boolean"
        },
        "StageName": {
            "description": "The name of the blue stage.",
            "type": "string"
        },
        "CanaryPercentage": {
            "description": "Percentage of the traffic that is routed to an updated deployment for 15 minutes. Provide this value to enable canary deployments and configure CloudWatch alarms and CloudFormation rollback triggers to roll back when canaries do not work as expected.",
            "type": "integer",
            "minimum": 1,
            "maximum": 99
        },
        "GreenTestStateMachineArn": {
            "description": "ARN of an AWS StepFunction that executes automatich tests against the green stage of the API Gateway after deployment. This STepFunction has to succeed, before the canary deployment on the blue stage starts.",
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "RestApiId",
        "DeploymentId"
    ],
    "createOnlyProperties": [
        "/properties/RestApiId"
    ],
    "readOnlyProperties": [
        "/properties/StageName"
    ],
    "primaryIdentifier": [
        "/properties/StageName"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "apigateway:PUT",
                "apigateway:POST",
                "apigateway:GET",
                "apigateway:PATCH"
            ]
        },
        "read": {
            "permissions": [
                "apigateway:GET"
            ]
        },
        "update": {
            "permissions": [
                "apigateway:PUT",
                "apigateway:POST",
                "apigateway:GET",
                "apigateway:PATCH",
                "states:DescribeExecution",
                "states:StartExecution"
            ]
        },
        "delete": {
            "permissions": [
                "apigateway:DELETE"
            ]
        }
    }
}
